// Code generated by ogen, DO NOT EDIT.

package viewgen

import (
	"fmt"
	"time"
)

func (s *ErrorSchemaStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

type AuthLoginPostOK struct {
	UserResponse UserSchema `json:"userResponse"`
	AccessToken  string     `json:"accessToken"`
	RefreshToken string     `json:"refreshToken"`
}

// GetUserResponse returns the value of UserResponse.
func (s *AuthLoginPostOK) GetUserResponse() UserSchema {
	return s.UserResponse
}

// GetAccessToken returns the value of AccessToken.
func (s *AuthLoginPostOK) GetAccessToken() string {
	return s.AccessToken
}

// GetRefreshToken returns the value of RefreshToken.
func (s *AuthLoginPostOK) GetRefreshToken() string {
	return s.RefreshToken
}

// SetUserResponse sets the value of UserResponse.
func (s *AuthLoginPostOK) SetUserResponse(val UserSchema) {
	s.UserResponse = val
}

// SetAccessToken sets the value of AccessToken.
func (s *AuthLoginPostOK) SetAccessToken(val string) {
	s.AccessToken = val
}

// SetRefreshToken sets the value of RefreshToken.
func (s *AuthLoginPostOK) SetRefreshToken(val string) {
	s.RefreshToken = val
}

type AuthLoginPostReq struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

// GetEmail returns the value of Email.
func (s *AuthLoginPostReq) GetEmail() string {
	return s.Email
}

// GetPassword returns the value of Password.
func (s *AuthLoginPostReq) GetPassword() string {
	return s.Password
}

// SetEmail sets the value of Email.
func (s *AuthLoginPostReq) SetEmail(val string) {
	s.Email = val
}

// SetPassword sets the value of Password.
func (s *AuthLoginPostReq) SetPassword(val string) {
	s.Password = val
}

type AuthRefreshPostOK struct {
	AccessToken string `json:"accessToken"`
}

// GetAccessToken returns the value of AccessToken.
func (s *AuthRefreshPostOK) GetAccessToken() string {
	return s.AccessToken
}

// SetAccessToken sets the value of AccessToken.
func (s *AuthRefreshPostOK) SetAccessToken(val string) {
	s.AccessToken = val
}

type AuthRefreshPostReq struct {
	RefreshToken string `json:"refreshToken"`
}

// GetRefreshToken returns the value of RefreshToken.
func (s *AuthRefreshPostReq) GetRefreshToken() string {
	return s.RefreshToken
}

// SetRefreshToken sets the value of RefreshToken.
func (s *AuthRefreshPostReq) SetRefreshToken(val string) {
	s.RefreshToken = val
}

// AuthRegisterPostCreated is response for AuthRegisterPost operation.
type AuthRegisterPostCreated struct{}

type AuthRegisterPostReq struct {
	Username string `json:"username"`
	Email    string `json:"email"`
	Password string `json:"password"`
}

// GetUsername returns the value of Username.
func (s *AuthRegisterPostReq) GetUsername() string {
	return s.Username
}

// GetEmail returns the value of Email.
func (s *AuthRegisterPostReq) GetEmail() string {
	return s.Email
}

// GetPassword returns the value of Password.
func (s *AuthRegisterPostReq) GetPassword() string {
	return s.Password
}

// SetUsername sets the value of Username.
func (s *AuthRegisterPostReq) SetUsername(val string) {
	s.Username = val
}

// SetEmail sets the value of Email.
func (s *AuthRegisterPostReq) SetEmail(val string) {
	s.Email = val
}

// SetPassword sets the value of Password.
func (s *AuthRegisterPostReq) SetPassword(val string) {
	s.Password = val
}

type BearerAuth struct {
	Token string
	Roles []string
}

// GetToken returns the value of Token.
func (s *BearerAuth) GetToken() string {
	return s.Token
}

// GetRoles returns the value of Roles.
func (s *BearerAuth) GetRoles() []string {
	return s.Roles
}

// SetToken sets the value of Token.
func (s *BearerAuth) SetToken(val string) {
	s.Token = val
}

// SetRoles sets the value of Roles.
func (s *BearerAuth) SetRoles(val []string) {
	s.Roles = val
}

type ErrorSchema struct {
	ErrorMessage string `json:"error_message"`
}

// GetErrorMessage returns the value of ErrorMessage.
func (s *ErrorSchema) GetErrorMessage() string {
	return s.ErrorMessage
}

// SetErrorMessage sets the value of ErrorMessage.
func (s *ErrorSchema) SetErrorMessage(val string) {
	s.ErrorMessage = val
}

// ErrorSchemaStatusCode wraps ErrorSchema with StatusCode.
type ErrorSchemaStatusCode struct {
	StatusCode int
	Response   ErrorSchema
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorSchemaStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorSchemaStatusCode) GetResponse() ErrorSchema {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorSchemaStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorSchemaStatusCode) SetResponse(val ErrorSchema) {
	s.Response = val
}

// Ref: #/components/schemas/joke_schema
type JokeSchema struct {
	ID          string    `json:"id"`
	UserID      string    `json:"userID"`
	Title       string    `json:"title"`
	Text        string    `json:"text"`
	Explanation OptString `json:"explanation"`
	CreatedAt   time.Time `json:"createdAt"`
}

// GetID returns the value of ID.
func (s *JokeSchema) GetID() string {
	return s.ID
}

// GetUserID returns the value of UserID.
func (s *JokeSchema) GetUserID() string {
	return s.UserID
}

// GetTitle returns the value of Title.
func (s *JokeSchema) GetTitle() string {
	return s.Title
}

// GetText returns the value of Text.
func (s *JokeSchema) GetText() string {
	return s.Text
}

// GetExplanation returns the value of Explanation.
func (s *JokeSchema) GetExplanation() OptString {
	return s.Explanation
}

// GetCreatedAt returns the value of CreatedAt.
func (s *JokeSchema) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *JokeSchema) SetID(val string) {
	s.ID = val
}

// SetUserID sets the value of UserID.
func (s *JokeSchema) SetUserID(val string) {
	s.UserID = val
}

// SetTitle sets the value of Title.
func (s *JokeSchema) SetTitle(val string) {
	s.Title = val
}

// SetText sets the value of Text.
func (s *JokeSchema) SetText(val string) {
	s.Text = val
}

// SetExplanation sets the value of Explanation.
func (s *JokeSchema) SetExplanation(val OptString) {
	s.Explanation = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *JokeSchema) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// JokesDelNoContent is response for JokesDel operation.
type JokesDelNoContent struct{}

type JokesDelReq struct {
	JokeID string `json:"joke_id"`
}

// GetJokeID returns the value of JokeID.
func (s *JokesDelReq) GetJokeID() string {
	return s.JokeID
}

// SetJokeID sets the value of JokeID.
func (s *JokesDelReq) SetJokeID(val string) {
	s.JokeID = val
}

type JokesPostReq struct {
	Title       string    `json:"title"`
	Text        string    `json:"text"`
	Explanation OptString `json:"explanation"`
}

// GetTitle returns the value of Title.
func (s *JokesPostReq) GetTitle() string {
	return s.Title
}

// GetText returns the value of Text.
func (s *JokesPostReq) GetText() string {
	return s.Text
}

// GetExplanation returns the value of Explanation.
func (s *JokesPostReq) GetExplanation() OptString {
	return s.Explanation
}

// SetTitle sets the value of Title.
func (s *JokesPostReq) SetTitle(val string) {
	s.Title = val
}

// SetText sets the value of Text.
func (s *JokesPostReq) SetText(val string) {
	s.Text = val
}

// SetExplanation sets the value of Explanation.
func (s *JokesPostReq) SetExplanation(val OptString) {
	s.Explanation = val
}

type JokesPutReq struct {
	JokeID      string    `json:"jokeID"`
	Title       OptString `json:"title"`
	Text        OptString `json:"text"`
	Explanation OptString `json:"explanation"`
}

// GetJokeID returns the value of JokeID.
func (s *JokesPutReq) GetJokeID() string {
	return s.JokeID
}

// GetTitle returns the value of Title.
func (s *JokesPutReq) GetTitle() OptString {
	return s.Title
}

// GetText returns the value of Text.
func (s *JokesPutReq) GetText() OptString {
	return s.Text
}

// GetExplanation returns the value of Explanation.
func (s *JokesPutReq) GetExplanation() OptString {
	return s.Explanation
}

// SetJokeID sets the value of JokeID.
func (s *JokesPutReq) SetJokeID(val string) {
	s.JokeID = val
}

// SetTitle sets the value of Title.
func (s *JokesPutReq) SetTitle(val OptString) {
	s.Title = val
}

// SetText sets the value of Text.
func (s *JokesPutReq) SetText(val OptString) {
	s.Text = val
}

// SetExplanation sets the value of Explanation.
func (s *JokesPutReq) SetExplanation(val OptString) {
	s.Explanation = val
}

type JokesSchema []JokeSchema

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// UserDelNoContent is response for UserDel operation.
type UserDelNoContent struct{}

type UserDelReq struct {
	Password string `json:"password"`
}

// GetPassword returns the value of Password.
func (s *UserDelReq) GetPassword() string {
	return s.Password
}

// SetPassword sets the value of Password.
func (s *UserDelReq) SetPassword(val string) {
	s.Password = val
}

type UserPutReq struct {
	Password OptString `json:"password"`
	Fullname OptString `json:"fullname"`
	Status   OptString `json:"status"`
}

// GetPassword returns the value of Password.
func (s *UserPutReq) GetPassword() OptString {
	return s.Password
}

// GetFullname returns the value of Fullname.
func (s *UserPutReq) GetFullname() OptString {
	return s.Fullname
}

// GetStatus returns the value of Status.
func (s *UserPutReq) GetStatus() OptString {
	return s.Status
}

// SetPassword sets the value of Password.
func (s *UserPutReq) SetPassword(val OptString) {
	s.Password = val
}

// SetFullname sets the value of Fullname.
func (s *UserPutReq) SetFullname(val OptString) {
	s.Fullname = val
}

// SetStatus sets the value of Status.
func (s *UserPutReq) SetStatus(val OptString) {
	s.Status = val
}

// Ref: #/components/schemas/user_schema
type UserSchema struct {
	ID        string    `json:"id"`
	Username  string    `json:"username"`
	Email     string    `json:"email"`
	Fullname  OptString `json:"fullname"`
	Status    OptString `json:"status"`
	CreatedAt time.Time `json:"createdAt"`
}

// GetID returns the value of ID.
func (s *UserSchema) GetID() string {
	return s.ID
}

// GetUsername returns the value of Username.
func (s *UserSchema) GetUsername() string {
	return s.Username
}

// GetEmail returns the value of Email.
func (s *UserSchema) GetEmail() string {
	return s.Email
}

// GetFullname returns the value of Fullname.
func (s *UserSchema) GetFullname() OptString {
	return s.Fullname
}

// GetStatus returns the value of Status.
func (s *UserSchema) GetStatus() OptString {
	return s.Status
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserSchema) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *UserSchema) SetID(val string) {
	s.ID = val
}

// SetUsername sets the value of Username.
func (s *UserSchema) SetUsername(val string) {
	s.Username = val
}

// SetEmail sets the value of Email.
func (s *UserSchema) SetEmail(val string) {
	s.Email = val
}

// SetFullname sets the value of Fullname.
func (s *UserSchema) SetFullname(val OptString) {
	s.Fullname = val
}

// SetStatus sets the value of Status.
func (s *UserSchema) SetStatus(val OptString) {
	s.Status = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserSchema) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}
