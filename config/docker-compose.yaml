name: giggler-golang
services:
  # INFRASTRUCTURE SERVICES
  # TODO: add grafana loki
  # TODO: add grafana tempo
  # TODO: add prometheus

  # API ITSELF
  restapi:
    env_file:
      - ./env/.env
    environment:
      GOPATH: ${GOPATH}
      GOCACHE: ${GOCACHE}
    ports:
      - "${RESTAPI_PORT}:${RESTAPI_PORT}"
    healthcheck:
      test:
        ["CMD-SHELL", "curl -f http://localhost:${RESTAPI_PORT}/build-version"]
      start_period: 60s
      interval: 1s
      timeout: 1s
      retries: 5

  # CONSUMER SERVICES
  openapi:
    build:
      context: .
      dockerfile: ./external/openapi/cmd/Dockerfile
    env_file:
      - ./env/.env
    ports:
      - "${OPENAPI_PORT}:${OPENAPI_PORT}"
    depends_on:
      restapi:
        condition: service_healthy
  grafana:
    image: grafana/grafana-oss
    restart: unless-stopped
    environment:
      GF_LOG_LEVEL: warn
    # if you are running as root then set it to 0
    # else find the right id with the id -u command
    user: "0"
    ports:
      - "${GRAFANA_PORT}:3000"
    volumes:
      - /var/lib/grafana
    depends_on:
      restapi:
        condition: service_healthy
