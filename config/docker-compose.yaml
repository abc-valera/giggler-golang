name: giggler-golang
services:
  # INFRASTRUCTURE SERVICES
  # TODO: add grafana loki
  # TODO: add grafana tempo
  # TODO: add prometheus
  db:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - /var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 1s
      timeout: 5s
      retries: 10
  db-migrate:
    image: migrate/migrate
    volumes:
      - ./external/migrations:/migrations
    command: >
      -path=/migrations/
      -database postgresql://postgres:postgres@db:5432/postgres?sslmode=disable
      up
    depends_on:
      db:
        condition: service_healthy

  # API ITSELF
  restapi:
    depends_on:
      db:
        condition: service_healthy
      db-migrate:
        condition: service_completed_successfully

  # CONSUMER SERVICES
  openapi:
    profiles: [api-dev, api-release]
    build:
      context: .
      dockerfile: ./external/openapi/cmd/Dockerfile
    env_file:
      - ./env/.env
    ports:
      - "${OPENAPI_PORT}:${OPENAPI_PORT}"
    depends_on:
      api:
        condition: service_healthy
  grafana:
    image: grafana/grafana-oss
    restart: unless-stopped
    environment:
      GF_LOG_LEVEL: warn
    # if you are running as root then set it to 0
    # else find the right id with the id -u command
    user: "0"
    ports:
      - "${GRAFANA_PORT}:3000"
    volumes:
      - /var/lib/grafana
    depends_on:
      restapi:
        condition: service_healthy
