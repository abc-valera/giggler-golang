name: giggler-golang
services:
  # INFRASTRUCTURE SERVICES
  # TODO: add grafana loki
  # TODO: add grafana tempo
  # TODO: add prometheus
  db:
    profiles:
      - dev
      - release
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - /var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 1s
      timeout: 5s
      retries: 10

  # API ITSELF
  restapi:
    profiles:
      - release
    build:
      context: .
      dockerfile: ./src/cmd/restapi/Dockerfile
      args:
        WORKDIR_PATH: ${PWD}
        BUILD_VERSION: ${BUILD_VERSION}
    env_file:
      - ./env/.env
    environment:
      GOMODCACHE: ${GOMODCACHE}
      GOCACHE: ${GOCACHE}
    volumes:
      - ${PWD}/local
    ports:
      - "${RESTAPI_PORT}:${RESTAPI_PORT}"
    healthcheck:
      test:
        ["CMD-SHELL", "curl -f http://localhost:${RESTAPI_PORT}/build-version"]
      start_period: 5s
      interval: 1s
      timeout: 1s
      retries: 5
    depends_on:
      db:
        condition: service_healthy

  # CONSUMER SERVICES
  grafana:
    profiles:
      - dev
      - release
    image: grafana/grafana-oss
    restart: unless-stopped
    # if you are running as root then set it to 0
    # else find the right id with the id -u command
    user: "0"
    ports:
      - "${GRAFANA_PORT}:3000"
    volumes:
      - /var/lib/grafana
